name: Release Semantic Stack RQL
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version number of the release'
        required: true
jobs:
  check-preconditions:
    name: Check preconditions
    runs-on: ubuntu-24.04
    steps:
      - name: Sanity check version
        if: ${{ !contains( github.event.inputs.release_version, '-M' ) }}
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          release_version=${{ github.event.inputs.release_version }}

          if [[ $release_version =~ ^[0-9]+.[0-9]+.[0-9]+$ ]]
          then
            echo version is valid
          else
            echo release version $release_version is invalid
            exit 1
          fi

  release:
    name: Release
    needs: [ check-preconditions ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4


      - name: Check code style
        uses: dbelyaev/action-checkstyle@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          checkstyle_config: google_checks.xml
          level: warning
          fail_level: warning

      # Required to have Maven settings.xml set up correctly
      - name: Setup JDK 21
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
        with:
          distribution: 'temurin'
          java-version: '21'
          server-id: central
          server-username: MAVEN_CENTRAL_USERNAME
          server-password: MAVEN_CENTRAL_PASSWORD
          gpg-private-key: ${{ secrets.PGP_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          cache: 'maven'
          overwrite-settings: false
          
      - name: Setup Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com  

      - name: Cache Maven packages
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache SonarQube packages
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set versions
        run: |
          release_version=${{ github.event.inputs.release_version }}
          release_branch_name=${release_version%.*}.x
          echo "release_branch_name=$release_branch_name" >> $GITHUB_ENV

          # Set version in pom.xml files
          mvn -B clean install -DskipTests -Dmaven.javadoc.skip=true
          mvn -B versions:set -DnewVersion=${release_version}
          mvn -B versions:commit
          yq eval -i '.version = "${release_version}"' documentation/antora.yml
          git add .
          git commit -m "Release version ${release_version}"

      - name: Commit version changes and push to upstream repository
        uses: stefanzweifel/git-auto-commit-action@b863ae1933cb653a53c021fe36dbb774e1fb9403 # v5
        with:
          branch: ${{ env.release_branch_name }}
          commit_user_name: github-actions
          commit_user_email: github-actions@github.com
          commit_author: Author <actions@github.com>
          file_pattern: 'documentation/antora.yml pom.xml */pom.xml */*/pom.xml'

      - name: Build and Deploy to Maven Central
        run: mvn -B clean deploy org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Psign
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.PGP_KEY_PASSWORD }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}

      # Full release: Github
      - name: "Create Github release (full)"
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          body: "Release version ${{ github.event.inputs.release_version }}."
          tag_name: v${{ github.event.inputs.release_version }}
          target_commitish: ${{ env.release_branch_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
          
      # Currently cannot use because the CLA locks closed PRs and the action cannot comment PRs
      #- name: "Notify issues of release their fix is contained in"
      #  uses: apexskier/github-release-commenter@3bd413ad5e1d603bfe2282f9f06f2bdcec079327 # v1.3.6
      #  with:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    comment-template: |
      #      Release {release_link} addresses this.
